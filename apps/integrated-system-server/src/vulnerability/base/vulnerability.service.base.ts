/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Vulnerability as PrismaVulnerability } from "@prisma/client";

export class VulnerabilityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VulnerabilityCountArgs, "select">
  ): Promise<number> {
    return this.prisma.vulnerability.count(args);
  }

  async vulnerabilities(
    args: Prisma.VulnerabilityFindManyArgs
  ): Promise<PrismaVulnerability[]> {
    return this.prisma.vulnerability.findMany(args);
  }
  async vulnerability(
    args: Prisma.VulnerabilityFindUniqueArgs
  ): Promise<PrismaVulnerability | null> {
    return this.prisma.vulnerability.findUnique(args);
  }
  async createVulnerability(
    args: Prisma.VulnerabilityCreateArgs
  ): Promise<PrismaVulnerability> {
    return this.prisma.vulnerability.create(args);
  }
  async updateVulnerability(
    args: Prisma.VulnerabilityUpdateArgs
  ): Promise<PrismaVulnerability> {
    return this.prisma.vulnerability.update(args);
  }
  async deleteVulnerability(
    args: Prisma.VulnerabilityDeleteArgs
  ): Promise<PrismaVulnerability> {
    return this.prisma.vulnerability.delete(args);
  }
}
