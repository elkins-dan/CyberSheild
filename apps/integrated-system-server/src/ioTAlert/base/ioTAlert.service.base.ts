/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, IoTAlert as PrismaIoTAlert } from "@prisma/client";

export class IoTAlertServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.IoTAlertCountArgs, "select">): Promise<number> {
    return this.prisma.ioTAlert.count(args);
  }

  async ioTAlerts(
    args: Prisma.IoTAlertFindManyArgs
  ): Promise<PrismaIoTAlert[]> {
    return this.prisma.ioTAlert.findMany(args);
  }
  async ioTAlert(
    args: Prisma.IoTAlertFindUniqueArgs
  ): Promise<PrismaIoTAlert | null> {
    return this.prisma.ioTAlert.findUnique(args);
  }
  async createIoTAlert(
    args: Prisma.IoTAlertCreateArgs
  ): Promise<PrismaIoTAlert> {
    return this.prisma.ioTAlert.create(args);
  }
  async updateIoTAlert(
    args: Prisma.IoTAlertUpdateArgs
  ): Promise<PrismaIoTAlert> {
    return this.prisma.ioTAlert.update(args);
  }
  async deleteIoTAlert(
    args: Prisma.IoTAlertDeleteArgs
  ): Promise<PrismaIoTAlert> {
    return this.prisma.ioTAlert.delete(args);
  }
}
