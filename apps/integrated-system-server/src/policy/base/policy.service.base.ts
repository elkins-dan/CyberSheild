/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Policy as PrismaPolicy } from "@prisma/client";

export class PolicyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PolicyCountArgs, "select">): Promise<number> {
    return this.prisma.policy.count(args);
  }

  async policies(args: Prisma.PolicyFindManyArgs): Promise<PrismaPolicy[]> {
    return this.prisma.policy.findMany(args);
  }
  async policy(
    args: Prisma.PolicyFindUniqueArgs
  ): Promise<PrismaPolicy | null> {
    return this.prisma.policy.findUnique(args);
  }
  async createPolicy(args: Prisma.PolicyCreateArgs): Promise<PrismaPolicy> {
    return this.prisma.policy.create(args);
  }
  async updatePolicy(args: Prisma.PolicyUpdateArgs): Promise<PrismaPolicy> {
    return this.prisma.policy.update(args);
  }
  async deletePolicy(args: Prisma.PolicyDeleteArgs): Promise<PrismaPolicy> {
    return this.prisma.policy.delete(args);
  }
}
